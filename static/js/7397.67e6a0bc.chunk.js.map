{"version":3,"file":"static/js/7397.67e6a0bc.chunk.js","mappings":"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","sources":["module/Form/component/DetailsComment/DetailsComment.jsx","module/Form/component/DetailsComment/DetailsComment.styled.jsx","module/Form/component/TextInput/TextInput.jsx","module/Form/component/TextInput/TextInput.styled.jsx","module/Form/component/TypeHelpList/Container/Container.jsx","module/Form/component/TypeHelpList/TypeHelpItem/TypeHelpItem.jsx","module/Form/component/TypeHelpList/TypeHelpItem/TypeHelpItem.styled.jsx","module/Form/component/TypeHelpList/TypeHelpList.jsx","module/Form/component/UserData/UserData.jsx","module/Form/component/UserData/UserData.styled.jsx","module/Form/component/Utils/Button.jsx","module/Form/component/Utils/CheckBoxDelivery.jsx","module/Form/component/Utils/ContainerBlock.jsx","module/Form/component/Utils/StyledFormContainer.jsx","module/Form/component/Utils/Title.jsx","module/Utils/Button/Button.jsx","module/Utils/Button/Button.styled.jsx","module/Utils/CheckBox/CheckBox.jsx","module/Utils/CheckBox/CheckBox.styled.jsx","module/Utils/Line/Line.jsx","service/typeOfHelp/dataFromTypeOfHelp.js"],"sourcesContent":["import { Title, ContainerBlock } from '../Utils';\nimport { Textarea } from './DetailsComment.styled';\n\nexport const DetailsComment = () => (\n  <ContainerBlock>\n    <Title text=\"Додатково:\" />\n    <Textarea name=\"info\" placeholder=\"введіть інформіцію\" />\n  </ContainerBlock>\n);\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const Textarea = styled(Field).attrs(() => ({\n  type: 'text',\n  component: 'textarea',\n  rows: '3',\n}))`\n  padding: 6px;\n  border: 1px solid var(--first-color-bg);\n  margin-top: 8px;\n  border-radius: 3px;\n  font-size: 14px;\n  width: 100%;\n  resize: none;\n  font-style: italic;\n\n  &::placeholder {\n    font-size: 10px;\n    color: var(--unactive-color-bg);\n\n    @media screen and (min-width: 768px) {\n      font-size: 17px;\n    }\n\n    @media screen and (min-width: 1014px) {\n      font-size: 12px;\n    }\n  }\n\n  &:focus {\n    outline: 1px solid #030067;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 20px;\n    font-size: 22px;\n    padding: 10px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    margin-top: 10px;\n    font-size: 14px;\n    padding: 6px 10px;\n  }\n`;\n","import { Input, Label } from './TextInput.styled';\n\nexport const TextInput = ({ label, name, placeholder, options }) => {\n  return (\n    <>\n      {label && <Label> {label}</Label>}\n      <Input name={name} placeholder={placeholder} $formController={options} />\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const Label = styled.span`\n  width: 65px;\n  display: inline-block;\n  flex-shrink: 0;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n    width: 120px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    font-size: 12px;\n  }\n`;\n\nexport const Input = styled(Field).attrs(({ required = true }) => ({\n  type: 'text',\n  required,\n  autoComplete: 'off',\n}))`\n  width: 100%;\n  border: none;\n  border-bottom: ${({ $formController }) => {\n    const errors = $formController?.errors;\n    const touched = $formController?.touched;\n\n    const falseColor = '0.5px solid #ff0000';\n    const defaultColor = '1px solid #6b8cef6e';\n\n    if (!$formController?.isSubmitting) {\n      const inValid = touched && errors && '0.5px solid #ff0000';\n      return inValid || defaultColor;\n    }\n\n    if ($formController?.isSubmitting) {\n      return errors ? falseColor : defaultColor;\n    }\n  }};\n\n  outline: none;\n  padding: 1px 10px;\n  font-style: italic;\n\n  @media screen and (min-width: 768px) {\n    padding: 1px 20px;\n    font-size: 22px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 2px 20px;\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    padding: 2px 20px;\n    font-size: 14px;\n  }\n\n  &::placeholder {\n    text-align: center;\n    font-size: 10px;\n    color: var(--unactive-color-bg);\n\n    @media screen and (min-width: 768px) {\n      font-size: 15px;\n    }\n\n    @media screen and (min-width: 1024px) {\n      font-size: 12px;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  margin: 10px 0;\n\n  @media screen and (min-width: 768px) {\n    margin: 25px 0;\n  }\n\n  @media screen and (min-width: 1024px) {\n    margin: 10px 0;\n  }\n`;\n","import { TextInput } from 'module/Form/component/TextInput/TextInput';\nimport { CheckBox } from 'module/Utils/CheckBox/CheckBox';\nimport { Wrapper } from './TypeHelpItem.styled';\n\nexport const TypeHelpItem = ({\n  isSelected,\n  data: { name, label, details },\n}) => (\n  <Wrapper key={name}>\n    <CheckBox\n      value={name}\n      label={label}\n      name=\"typeHelp\"\n      theme=\"ligth\"\n      width={'160px'}\n    />\n\n    {isSelected && (\n      <TextInput\n        name={`additional.${name}`}\n        placeholder={details.view}\n        required={details.required}\n      />\n    )}\n  </Wrapper>\n);\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 25px;\n  justify-content: space-between;\n\n  @media screen and (min-width: 768px) {\n    height: 40px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    height: 24px;\n  }\n`;\n\nexport const ErrorText = styled.span`\n  font-size: 12px;\n  color: red;\n  position: absolute;\n  left: 150px;\n  top: 2px;\n`;\n","import { ContainerBlock, Title } from 'module/Form/component/Utils';\nimport { Container } from './Container/Container';\nimport { TypeHelpItem } from './TypeHelpItem/TypeHelpItem';\nimport { allTypeOfHelp } from 'service/typeOfHelp/dataFromTypeOfHelp';\nimport { ErrorText } from './TypeHelpItem/TypeHelpItem.styled';\nconst allTypes = allTypeOfHelp();\n\nexport const TypeHelp = ({ selectedTypes, options, isSubmitClick }) => {\n  const inValid =\n    (options?.errors?.typeHelp && options?.touched?.typeHelp) ||\n    (options?.errors?.typeHelp && options.isSubmitting);\n\n  return (\n    <ContainerBlock line={true}>\n      {isSubmitClick && options?.errors?.typeHelp && (\n        <ErrorText> {options?.errors.typeHelp}</ErrorText>\n      )}\n      <Title text=\"Вид допомоги:\" $inValid={inValid} />\n      <Container>\n        {allTypes.map(data => {\n          const isTypeSelected = selectedTypes?.find(s => s === data.name);\n          return <TypeHelpItem key={data.name} isSelected={isTypeSelected} data={data} />;\n        })}\n      </Container>\n    </ContainerBlock>\n  );\n};\n","import { Title, CheckBoxDelivery, ContainerBlock } from '../Utils';\nimport { TextInput } from '../TextInput/TextInput';\nimport { Wrapper, ContainerInput } from './UserData.styled';\n\nexport const UserData = ({ options: { errors, touched, isSubmitting } }) => {\n  return (\n    <ContainerBlock line={true}>\n      <Title text=\"*Дані про замовника:\" />\n      <Wrapper>\n        <ContainerInput>\n          <TextInput\n            label={'Імя'}\n            name={'contacts.name'}\n            placeholder={'введіть організацію / імя '}\n            options={{\n              touched: touched?.contacts?.name,\n              errors: errors?.contacts?.name,\n              isSubmitting,\n            }}\n          />\n        </ContainerInput>\n        <ContainerInput>\n          <TextInput\n            label={'Контакт'}\n            name={'contacts.tel'}\n            placeholder={'введіть номер телефону / аккаунт'}\n            options={{\n              touched: touched?.contacts?.tel,\n              errors: errors?.contacts?.tel,\n              isSubmitting,\n            }}\n          />\n        </ContainerInput>\n        <ContainerInput>\n          <TextInput\n            label={'Адреса'}\n            name={'contacts.adress'}\n            placeholder={'введіть адресу'}\n            options={{\n              touched: touched?.contacts?.adress,\n              errors: errors?.contacts?.adress,\n              isSubmitting,\n            }}\n          />\n        </ContainerInput>\n      </Wrapper>\n      <CheckBoxDelivery />\n    </ContainerBlock>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 20px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    margin-bottom: 5px;\n    margin-top: 10px;\n  }\n`;\n\nexport const ContainerInput = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  margin-bottom: 12px;\n\n  @media screen and (min-width: 1024px) {\n    margin-bottom: 3px;\n  }\n`;\n","import { Button as MainButton } from 'module/Utils/Button/Button';\nimport styled from 'styled-components';\n\nconst ButtonContainer = styled.div`\n  margin-top: 12px;\n  margin-bottom: 0;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 12px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    margin-top: 0px;\n  }\n`;\n\nexport const Button = ({ text, onClick }) => (\n  <ButtonContainer>\n    <MainButton type=\"submit\" text={text} onClick={onClick} />\n  </ButtonContainer>\n);\n","import styled from 'styled-components';\nimport { CheckBox } from 'module/Utils/CheckBox/CheckBox';\n\nconst DeliverBox = styled.div`\n  display: flex;\n  justify-content: flex-end;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 12px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const CheckBoxDelivery = () => (\n  <DeliverBox>\n    <CheckBox name=\"delivery\" label=\"доставка\" theme=\"ligth\" />\n  </DeliverBox>\n);\n","import styled from 'styled-components';\nimport { Line } from '../../../Utils/Line/Line';\n\nconst Container = styled.div`\n  padding-bottom: 7px;\n  position: relative;\n\n  @media screen and (min-width: 768px) {\n    padding-bottom: 20px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    padding-bottom: 8px;\n  }\n`;\n\nexport const ContainerBlock = ({ line, children }) => (\n  <Container>\n    {children}\n    {line && <Line />}\n  </Container>\n);\n","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const StyledFormContainer = styled(Form)`\n  display: flex;\n  flex-direction: column;\n\n  max-width: 355px;\n  border-radius: ${({ type }) => (type === 'edit' ? '0' : '6px')};\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px 15px;\n  font-size: 14px;\n\n  background-color: white;\n  box-shadow: 0px 0px 10px 3px #b8b8b833;\n\n  @media screen and (min-width: 768px) {\n    max-width: 610px;\n    width: 610px;\n    padding: 30px 30px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    padding: 20px 30px;\n  }\n`;\n","import styled from 'styled-components';\n\nconst StyledTitle = styled.h3`\n  font-size: 16px;\n  font-weight: 700;\n\n  color: ${({ $inValid }) => ($inValid ? 'red' : 'ingerit')};\n\n  @media screen and (min-width: 768px) {\n    font-size: 26px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Title = ({ text, $inValid }) => (\n  <StyledTitle $inValid={$inValid}>{text}</StyledTitle>\n);\n","import { StyledButton } from './Button.styled';\n\nexport const Button = ({ text = '', type = 'button', onClick, children }) => (\n  <StyledButton type={type} onClick={onClick}>\n    {text}\n    {children}\n  </StyledButton>\n);\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n\n  width: 180px;\n  min-width: 110px;\n  padding: 8px 4px;\n\n  background-color: var(--first-color-bg);\n  border: none;\n  border-radius: 5px;\n  color: #fff;\n  font-size: 14px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: rgb(65 106 229);\n  }\n\n  &:active {\n    background-color: #475094b8;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n    width: 280px;\n    min-width: 110px;\n    padding: 16px 7px;\n  }\n  @media screen and (min-width: 1024px) {\n    font-size: 16px;\n    width: 250px;\n    min-width: 110px;\n    padding: 7px 7px;\n  }\n`;\n","import { CheckBoxIcon, CheckBoxLabel, Input } from './CheckBox.styled';\n\nexport const CheckBox = ({\n  value,\n  label,\n  name,\n  onClick,\n  theme = 'dark',\n  width,\n  type,\n}) => (\n  <CheckBoxLabel width={width} type={type}>\n    <Input type=\"checkbox\" value={value} name={name} onClick={onClick} />\n    <CheckBoxIcon theme={theme} type={type} />\n    {label}\n  </CheckBoxLabel>\n);\n","import styled from 'styled-components';\nimport { Field } from 'formik';\nimport { BsCheckLg } from 'react-icons/bs';\n\nexport const CheckBoxLabel = styled.label`\n  font-size: 14px;\n  margin-right: 8px;\n\n  display: flex;\n\n  align-items: center;\n  flex-shrink: 0;\n  width: ${({ width = 'auto' }) => width};\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    font-size: 22px;\n    width: ${({ width = 'auto' }) => (width === '160px' ? '260px' : width)};\n    flex-direction: ${({ type }) => (type === 'filter' ? 'row-reverse' : 'row')};\n  }\n\n  @media screen and (min-width: 1024px) {\n    font-size: 14px;\n  }\n`;\n\nexport const CheckBoxIcon = styled(BsCheckLg)`\n  color: transparent;\n  margin-right: 8px;\n  border: 1px solid ${prop => (prop.theme === 'ligth' ? 'grey' : 'white')};\n  border-radius: 3px;\n  padding: 2px;\n\n  @media screen and (min-width: 768px) {\n    margin-right: ${({ type }) => (type === 'filter' ? '0px' : '18px')};\n    margin-left: ${({ type }) => (type === 'filter' ? '18px' : '0px')};\n  }\n`;\n\nexport const Input = styled(Field)`\n  position: absolute !important;\n  clip: rect(1px 1px 1px 1px); /* IE6, IE7 */\n  padding: 0 !important;\n  border: 0 !important;\n  height: 1px !important;\n  width: 1px !important;\n  clip: rect(1px, 1px, 1px, 1px);\n  overflow: hidden;\n\n  &:focus + ${CheckBoxIcon} {\n    border: 2px solid grey;\n  }\n\n  &:checked + ${CheckBoxIcon} {\n    background-color: var(--first-color-bg);\n    color: white;\n    border: none;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Line = styled.div`\n  display: block;\n  margin-top: 7px;\n  border-style: inset;\n  border-width: 1px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 12px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    margin-top: 8px;\n  }\n`;\n","import typeOfHelp from 'service/typeOfHelp/typeOfHelp';\n\n// {children_food: \"\", ...}\nexport const nameObjectTypeOfHelp = () =>\n  typeOfHelp.reduce((pV, { name }) => {\n    return { ...pV, [name]: '' };\n  }, {});\n\n//  [{type: 'clothes_adult', label: 'одяг для дорослих'}, {..},]\nexport const nameLabelArrayTypeOfHelp = () =>\n  typeOfHelp.map(({ name, label }) => {\n    return { name, label };\n  });\n\n//{children_food: \"дитяче харчування\", ...}\nexport const nameEngUkrObjectTypeOfHelp = () =>\n  typeOfHelp.reduce((pV, { name, label }) => {\n    return { ...pV, [name]: label };\n  }, {});\n\nexport const allTypeOfHelp = () => typeOfHelp;\n"],"names":["DetailsComment","ContainerBlock","Title","text","Textarea","name","placeholder","styled","Field","attrs","type","component","rows","TextInput","label","options","Label","Input","$formController","required","autoComplete","errors","touched","defaultColor","isSubmitting","Container","TypeHelpItem","isSelected","data","details","Wrapper","CheckBox","value","theme","width","view","ErrorText","allTypes","allTypeOfHelp","TypeHelp","selectedTypes","isSubmitClick","inValid","typeHelp","line","$inValid","map","isTypeSelected","find","s","UserData","ContainerInput","contacts","tel","adress","CheckBoxDelivery","ButtonContainer","Button","onClick","DeliverBox","children","Line","StyledFormContainer","Form","StyledTitle","StyledButton","CheckBoxLabel","CheckBoxIcon","BsCheckLg","prop","nameObjectTypeOfHelp","typeOfHelp","pV","nameLabelArrayTypeOfHelp","nameEngUkrObjectTypeOfHelp"],"sourceRoot":""}