{"version":3,"file":"static/js/8809.ff3ad150.chunk.js","mappings":"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","sources":["module/ApplicationList/component/OptionsButton/Modal/ModalWindow.jsx","module/ApplicationList/component/OptionsButton/Modal/types/ChangeTypeModal.jsx","module/ApplicationList/component/OptionsButton/Modal/types/DeletedModal.jsx","module/ApplicationList/component/OptionsButton/Modal/types/RestoreModal.jsx","module/ApplicationList/component/OptionsButton/OptionsButton.styled.jsx","module/ApplicationList/component/OptionsButton/typeButton/Call.jsx","module/ApplicationList/component/OptionsButton/typeButton/CompletedButton.jsx","module/ApplicationList/component/OptionsButton/typeButton/DeletedButton.jsx","module/ApplicationList/component/OptionsButton/typeButton/DeliveryButton.jsx","module/ApplicationList/component/OptionsButton/typeButton/EditButton.jsx","module/ApplicationList/component/OptionsButton/typeButton/InProgressButton.jsx","module/ApplicationList/component/OptionsButton/typeButton/PendingButton.jsx","root/isPage.js","service/changeStatus.js"],"sourcesContent":["import { ModalW } from 'module/Modal/Modal';\nimport { useSelector } from 'react-redux';\nimport { getRoleValue } from 'redux/authSlice';\nimport { ButtonWrapper, Button, Container } from './ModalWindow.styled';\nimport { NoAccess } from './noAccess';\n\nexport const ModalWindow = ({\n  changeType,\n  modalIsOpen,\n  setIsOpen,\n  children,\n  action,\n}) => {\n  const role = useSelector(getRoleValue);\n\n  return (\n    <ModalW onClose={setIsOpen} open={modalIsOpen}>\n      {role === 'GUEST' && <NoAccess onClose={setIsOpen} />}\n      {role !== 'GUEST' && (\n        <Container>\n          {children}\n          <ButtonWrapper>\n            <Button action={action} agree onClick={changeType}>\n              Так\n            </Button>\n            <Button\n              action={action}\n              disagree\n              onClick={() => {\n                setIsOpen(false);\n              }}\n            >\n              Ні\n            </Button>\n          </ButtonWrapper>\n        </Container>\n      )}\n    </ModalW>\n  );\n};\n","import { Text } from '../ModalWindow.styled';\nimport { ModalWindow } from '../ModalWindow';\n\nexport const ChangeTypeModal = ({\n  changeType,\n  modalIsOpen,\n  setIsOpen,\n  currentAction,\n  action,\n}) => {\n  return (\n    <ModalWindow\n      changeType={changeType}\n      modalIsOpen={modalIsOpen}\n      setIsOpen={setIsOpen}\n      action={action}\n    >\n      <Text>\n        Відправити заявку у{currentAction === 'pending' && ' АКТИВНІ'}\n        {currentAction === 'in progress' && ' РОБОТУ'}\n        {currentAction === 'completed' && ' ВИКОНАНІ'}?\n      </Text>\n    </ModalWindow>\n  );\n};\n","import { ModalWindow } from '../ModalWindow';\nimport { Text } from '../ModalWindow.styled';\n\nexport const DeletedModal = ({\n  changeType,\n  modalIsOpen,\n  setIsOpen,\n  action,\n}) => {\n  return (\n    <ModalWindow\n      changeType={changeType}\n      modalIsOpen={modalIsOpen}\n      setIsOpen={setIsOpen}\n      action={action}\n    >\n      <Text>Ви дійсно хочете видалити заявку?</Text>\n    </ModalWindow>\n  );\n};\n","import { ModalWindow } from '../ModalWindow';\nimport { Text } from '../ModalWindow.styled';\n\nexport const RestoreModal = ({\n  changeType,\n  modalIsOpen,\n  setIsOpen,\n  action,\n}) => {\n  return (\n    <ModalWindow\n      changeType={changeType}\n      modalIsOpen={modalIsOpen}\n      setIsOpen={setIsOpen}\n      action={action}\n    >\n      <Text>Ви дійсно бажаєте відновити заявку?</Text>\n    </ModalWindow>\n  );\n};\n","import styled from 'styled-components';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport { HiCheck, HiOutlineShoppingCart } from 'react-icons/hi';\nimport { FiEdit2, FiPhoneCall } from 'react-icons/fi';\nimport { FaRegHourglass } from 'react-icons/fa';\nimport { MdOutlineDeliveryDining } from 'react-icons/md';\n\nexport const IconBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 5px 0;\n\n  /* outline: 1px solid red;\n\n  * {\n    outline: 1px solid red;\n  } */\n\n  @media screen and (min-width: 768px) {\n    width: 300px;\n    flex-direction: row;\n    flex-wrap: wrap;\n    position: absolute;\n    top: 10px;\n    right: 5px;\n  }\n`;\n\nexport const IconContainer = styled.button`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: var(--unactive-color-bg);\n  padding: 0;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const IconInfo = styled.div`\n  display: none;\n  position: absolute;\n  left: -20px;\n  bottom: 28px;\n  width: 60px;\n  padding: 3px;\n  box-shadow: -1px 0px 5px #00000033;\n  font-size: 8px;\n  border-radius: 5px;\n  background-color: #fff;\n`;\n\nexport const TelLink = styled.a`\n  color: inherit;\n  display: flex;\n\n  &:hover ~ * {\n    display: block;\n  }\n`;\n\nexport const DeliveryIcon = styled(MdOutlineDeliveryDining)`\n  color: ${({ delivery }) => delivery && 'green'};\n  width: 22px;\n  height: 22px;\n\n  &:hover {\n    color: #000;\n  }\n  &:hover ~ * {\n    display: block;\n  }\n`;\n\nexport const CallIcon = styled(FiPhoneCall)`\n  width: 16px;\n  height: 16px;\n\n  &:hover {\n    color: #10af02;\n  }\n  &:hover ~ * {\n    display: block;\n  }\n`;\n\nexport const IconPending = styled(HiOutlineShoppingCart)`\n  width: 19px;\n  height: 19px;\n  color: ${({ type }) => (type === 'true' ? 'var(--first-color-bg)' : null)};\n\n  &:hover {\n    color: #000;\n  }\n  &:hover ~ * {\n    display: block;\n  }\n`;\n\nexport const WaitIcon = styled(FaRegHourglass)`\n  /* margin-bottom: 15px; */\n  width: 16px;\n  height: 16px;\n  color: ${({ type }) => (type === 'true' ? 'var(--first-color-bg)' : null)};\n\n  &:hover {\n    color: #000;\n  }\n  &:hover ~ * {\n    display: block;\n  }\n`;\n\nexport const DoneIcon = styled(HiCheck)`\n  /* margin-bottom: 15px; */\n  width: 18px;\n  height: 18px;\n  color: ${({ type }) => (type === 'true' ? 'var(--first-color-bg)' : null)};\n\n  &:hover {\n    color: #000;\n  }\n  &:hover ~ * {\n    display: block;\n  }\n`;\n\nexport const EditIcon = styled(FiEdit2)`\n  /* margin-bottom: 15px; */\n  width: 16px;\n  height: 16px;\n\n  &:hover {\n    color: #000;\n  }\n  &:hover ~ * {\n    display: block;\n  }\n`;\n\nexport const DeleteIcon = styled(AiOutlineDelete)`\n  width: 19px;\n  height: 19px;\n  color: ${({ type }) => (type === 'true' ? 'var(--first-color-bg)' : null)};\n\n  &:hover {\n    color: #000;\n  }\n  &:hover ~ * {\n    display: block;\n  }\n`;\n","import {\n  CallIcon,\n  TelLink,\n  IconContainer,\n  IconInfo,\n} from '../OptionsButton.styled';\n\nexport const CallButton = ({ tel }) => (\n  <IconContainer>\n    <TelLink href={`tel:${tel}`}>\n      <CallIcon />\n    </TelLink>\n    <IconInfo>Дзвінок</IconInfo>\n  </IconContainer>\n);\n","import { useState } from 'react';\nimport { isCompletedPage, isDeletedPage } from 'root/isPage';\nimport { changeStatus } from 'service/changeStatus';\nimport { ChangeTypeModal } from '../Modal/types/ChangeTypeModal';\nimport { RestoreModal } from '../Modal/types/RestoreModal';\nimport { DoneIcon, IconContainer, IconInfo } from '../OptionsButton.styled';\n\nexport const CompletedButton = ({ id, onChange, type }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const currentAction = 'completed';\n\n  const changeType = () => onChange(changeStatus(id, currentAction));\n  const handleClick = () => setIsOpen(true);\n  const onClose = () => setIsOpen(false);\n\n  return (\n    <>\n      <IconContainer disabled={isCompletedPage(type)} onClick={handleClick}>\n        <DoneIcon type={isCompletedPage(type).toString()} />\n        <IconInfo>Заявка виконана</IconInfo>\n      </IconContainer>\n\n      {isDeletedPage(type) ? (\n        <RestoreModal\n          changeType={changeType}\n          modalIsOpen={isOpen}\n          setIsOpen={onClose}\n          action={'change'}\n        />\n      ) : (\n        <ChangeTypeModal\n          changeType={changeType}\n          modalIsOpen={isOpen}\n          setIsOpen={onClose}\n          action={'change'}\n          currentAction={currentAction}\n        />\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { isDeletedPage } from 'root/isPage';\nimport { changeStatus } from 'service/changeStatus';\nimport { DeletedModal } from '../Modal/types/DeletedModal';\nimport { DeleteIcon, IconContainer, IconInfo } from '../OptionsButton.styled';\n\nexport const DeletedButton = ({ type, onChange, id }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const currentAction = 'deleted';\n\n  const handleClick = () => setIsOpen(true);\n  const onClose = () => setIsOpen(false);\n  const changeType = () => onChange(changeStatus(id, currentAction));\n\n  return (\n    <>\n      <IconContainer disabled={isDeletedPage(type)} onClick={handleClick}>\n        <DeleteIcon type={isDeletedPage(type).toString()} />\n        <IconInfo>Видалити</IconInfo>\n      </IconContainer>\n\n      <DeletedModal\n        id={id}\n        onChange={changeType}\n        modalIsOpen={isOpen}\n        setIsOpen={onClose}\n        action={currentAction}\n      />\n    </>\n  );\n};\n","import { DeliveryIcon, IconContainer, IconInfo } from '../OptionsButton.styled';\n\nexport const DeliveryButton = ({ delivery }) => (\n  <IconContainer>\n    <DeliveryIcon delivery={delivery ? 'needDel' : null} />\n    <IconInfo>\n      {delivery ? 'Потрібна доставка' : 'Доставка непотрібна'}\n    </IconInfo>\n  </IconContainer>\n);\n","import { useState } from 'react';\nimport { EditModal } from '../Modal/types/EditModal';\nimport { EditIcon, IconContainer, IconInfo } from '../OptionsButton.styled';\n\nexport const EditButton = ({ id, onChange }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClick = () => setIsOpen(true);\n  const onClose = () => setIsOpen(false);\n\n  return (\n    <>\n      <IconContainer onClick={handleClick}>\n        <EditIcon />\n        <IconInfo>Редагувати</IconInfo>\n      </IconContainer>\n\n      <EditModal\n        id={id}\n        modalIsOpen={isOpen}\n        setIsOpen={onClose}\n        onChange={onChange}\n      />\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { isDeletedPage, isInProgressPage } from 'root/isPage';\nimport { changeStatus } from 'service/changeStatus';\nimport { ChangeTypeModal } from '../Modal/types/ChangeTypeModal';\nimport { RestoreModal } from '../Modal/types/RestoreModal';\nimport { IconContainer, IconInfo, WaitIcon } from '../OptionsButton.styled';\n\nexport const InProgressButton = ({ id, onChange, type }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const currentAction = 'in progress';\n\n  const changeType = () => onChange(changeStatus(id, currentAction));\n  const handleClick = () => setIsOpen(true);\n  const onClose = () => setIsOpen(false);\n\n  return (\n    <>\n      <IconContainer onClick={handleClick}>\n        <WaitIcon type={isInProgressPage(type).toString()} />\n        <IconInfo>У роботі</IconInfo>\n      </IconContainer>\n\n      {isDeletedPage(type) ? (\n        <RestoreModal\n          changeType={changeType}\n          modalIsOpen={isOpen}\n          setIsOpen={onClose}\n          action={'change'}\n        />\n      ) : (\n        <ChangeTypeModal\n          changeType={changeType}\n          modalIsOpen={isOpen}\n          setIsOpen={onClose}\n          currentAction={currentAction}\n          action={'change'}\n        />\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { isDeletedPage, isPendingPage } from 'root/isPage';\nimport { changeStatus } from 'service/changeStatus';\nimport { ChangeTypeModal } from '../Modal/types/ChangeTypeModal';\nimport { RestoreModal } from '../Modal/types/RestoreModal';\nimport { IconPending, IconContainer, IconInfo } from '../OptionsButton.styled';\n\nexport const PendingButton = ({ id, onChange, type }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const currentAction = 'pending';\n\n  const changeType = () => onChange(changeStatus(id, currentAction));\n  const handleClick = () => setIsOpen(true);\n  const onClose = () => setIsOpen(false);\n\n  return (\n    <>\n      <IconContainer disabled={isPendingPage(type)} onClick={handleClick}>\n        <IconPending type={isPendingPage(type).toString()} />\n        <IconInfo>Активні</IconInfo>\n      </IconContainer>\n\n      {isDeletedPage(type) ? (\n        <RestoreModal\n          changeType={changeType}\n          modalIsOpen={isOpen}\n          setIsOpen={onClose}\n          action={'change'}\n        />\n      ) : (\n        <ChangeTypeModal\n          changeType={changeType}\n          modalIsOpen={isOpen}\n          setIsOpen={onClose}\n          currentAction={currentAction}\n          action={'change'}\n        />\n      )}\n    </>\n  );\n};\n","export const isPendingPage = type => type === 'pending';\nexport const isInProgressPage = type => type === 'in progress';\nexport const isCompletedPage = type => type === 'completed';\nexport const isDeletedPage = type => type === 'deleted';\n","import { notifyChange } from 'module/Toaster/Toaster';\n\nexport const changeStatus = (id, status) => {\n  switch (status) {\n    case 'pending':\n      notifyChange('Заявка відправлена у активні');\n      return {\n        id,\n        data: { status },\n      };\n\n    case 'in progress':\n      notifyChange('Заявка відправлена у роботу ');\n      return {\n        id,\n        data: { status, dataInProgress: new Date() },\n      };\n\n    case 'completed':\n      notifyChange(' Заявка викона!   🎉');\n      return {\n        id,\n        data: { status, dataCompleted: new Date() },\n      };\n\n    case 'deleted':\n      notifyChange(' Заявка видалена!  ❌ ');\n      return {\n        id,\n        data: { status, dataClose: new Date() },\n      };\n\n    default:\n      break;\n  }\n};\n"],"names":["ModalWindow","changeType","modalIsOpen","setIsOpen","children","action","role","useSelector","getRoleValue","ModalW","onClose","open","NoAccess","Container","ButtonWrapper","Button","agree","onClick","disagree","ChangeTypeModal","currentAction","Text","DeletedModal","RestoreModal","IconBlock","styled","IconContainer","IconInfo","TelLink","DeliveryIcon","MdOutlineDeliveryDining","delivery","CallIcon","FiPhoneCall","IconPending","HiOutlineShoppingCart","type","WaitIcon","FaRegHourglass","DoneIcon","HiCheck","EditIcon","FiEdit2","DeleteIcon","AiOutlineDelete","CallButton","tel","href","CompletedButton","id","onChange","useState","isOpen","changeStatus","disabled","isCompletedPage","toString","isDeletedPage","DeletedButton","DeliveryButton","EditButton","EditModal","InProgressButton","isInProgressPage","PendingButton","isPendingPage","status","notifyChange","data","dataInProgress","Date","dataCompleted","dataClose"],"sourceRoot":""}