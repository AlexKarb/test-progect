{"version":3,"file":"static/js/1478.3db4f86c.chunk.js","mappings":"wLAAO,IAAMA,EAAwB,SAAAC,GACnC,OAAOA,EAAMC,QAAO,SAACC,EAAKC,GACxB,IAAMC,EAAoBF,EAAIG,WAAU,SAAAC,GAAE,OAAIA,EAAG,KAAOH,MAE7B,IAAvBC,EACFF,EAAIK,KAAK,CAACJ,EAAM,IAEUD,EAAIE,GACZ,KAGpB,OAAOF,IACN,M,mGCVQM,EAAgB,SAAAC,GAC3B,IAAMC,EAA0BD,EAC7BE,OACAC,KAAI,SAAAT,GAAI,OAAIU,EAAAA,EAAAA,yBAAwBV,MAIvC,OAF0B,OAAO,IAAIW,IAAIJ,M,6GCL9BG,EAA0B,SAAAV,GACrC,OAAOY,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,GAASb,GAAV,c,+FCDFc,EAAuB,SAAAjB,GAClC,OAAOA,EAAMW,OAAOC,KAAI,SAAAT,GAAI,OAAIU,EAAAA,EAAAA,yBAAwBV,Q,2ICG7Ce,EAAuB,WAClC,IAAMC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,YAC1BC,EAAkB,GAClBC,EAAoB,GAEpBC,EAAUL,EACbP,KAAI,YAA6B,IAA1Ba,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAIf,OAHIA,GAAWH,EAAkBhB,KAAKmB,GAClCD,GAASH,EAAgBf,KAAKkB,GAE3BC,EAAY,CAACD,EAASC,GAAa,CAACD,MAE5CE,OAEGC,GAAgB7B,EAAAA,EAAAA,wBAAsBkB,EAAAA,EAAAA,sBAAqBK,IAC3DO,GAAkB9B,EAAAA,EAAAA,wBAAsBkB,EAAAA,EAAAA,sBAAqBM,IAGnE,MAAO,EAFmBf,EAAAA,EAAAA,eAAcgB,GAEbI,EAAeC","sources":["module/pages/Statistics/component/LineChart/hooks/caclStatisticsEntries.js","module/pages/Statistics/component/LineChart/hooks/dynamicLebels.js","module/pages/Statistics/component/LineChart/hooks/formatingToMonthAndYear.js","module/pages/Statistics/component/LineChart/hooks/sortAndFormatedArray.js","module/pages/Statistics/component/LineChart/hooks/useDynamicDataLebels.js"],"sourcesContent":["export const caclStatisticsEntries = array => {\n  return array.reduce((acc, data) => {\n    const indexInStatistics = acc.findIndex(el => el[0] === data);\n\n    if (indexInStatistics === -1) {\n      acc.push([data, 1]);\n    } else {\n      const lebelInStatistics = acc[indexInStatistics];\n      lebelInStatistics[1]++;\n    }\n\n    return acc;\n  }, []);\n};\n","import { formatingToMonthAndYear } from './formatingToMonthAndYear';\n\nexport const dynamicLebels = lebels => {\n  const sortedAndFormatedLabels = lebels\n    .sort()\n    .map(data => formatingToMonthAndYear(data));\n\n  const labelsOfMonthAndYear = [...new Set(sortedAndFormatedLabels)];\n\n  return labelsOfMonthAndYear;\n};\n","import { parseISO, format } from 'date-fns';\n\nexport const formatingToMonthAndYear = data => {\n  return format(parseISO(data), `MMM yyyy`);\n};\n","import { formatingToMonthAndYear } from './formatingToMonthAndYear';\n\nexport const sortAndFormatedArray = array => {\n  return array.sort().map(data => formatingToMonthAndYear(data));\n};\n","import { useSelector } from 'react-redux';\nimport { getRequest } from 'service/redux/request';\nimport { caclStatisticsEntries } from './caclStatisticsEntries';\nimport { dynamicLebels } from './dynamicLebels';\nimport { sortAndFormatedArray } from './sortAndFormatedArray';\n\nexport const useDynamicDataLebels = () => {\n  const requestData = useSelector(getRequest);\n  const arrayDataAddApp = [];\n  const arrayDataCloseApp = [];\n\n  const allData = requestData\n    .map(({ dataAdd, dataClose }) => {\n      if (dataClose) arrayDataCloseApp.push(dataClose);\n      if (dataAdd) arrayDataAddApp.push(dataAdd);\n\n      return dataClose ? [dataAdd, dataClose] : [dataAdd];\n    })\n    .flat();\n\n  const addStatictics = caclStatisticsEntries(sortAndFormatedArray(arrayDataAddApp));\n  const closeStatictics = caclStatisticsEntries(sortAndFormatedArray(arrayDataCloseApp));\n  const dymanicDataLebels = dynamicLebels(allData);\n\n  return [dymanicDataLebels, addStatictics, closeStatictics];\n};\n\n//   allData.push(\n//     ...test,\n//     '2023-10-24T12:37:13.616Z',\n//     '2023-10-23T12:37:13.616Z',\n//     '2020-04-25T12:37:13.616Z',\n//     '2020-02-22T16:22:36.745Z',\n//     '2022-02-22T16:22:36.745Z',\n//     '2023-02-22T16:22:36.745Z',\n//     '2036-11-22T16:22:36.745Z',\n//     '2038-11-22T16:22:36.745Z',\n//     '2039-11-22T16:22:36.745Z',\n//     '2040-11-22T16:22:36.745Z',\n//     '2037-12-22T16:22:36.745Z',\n\n//     '2025-04-25T12:37:13.616Z',\n//     '2026-02-22T16:22:36.745Z',\n//     '2027-02-22T16:22:36.745Z',\n//     '2028-02-22T16:22:36.745Z',\n//     '2024-11-22T15:05:09.526Z',\n//     '2024-11-22T09:39:16.002Z',\n//     '2024-11-22T12:37:13.616Z',\n//     '2024-11-22T12:37:13.616Z',\n//     '2024-11-22T16:22:36.745Z',\n//     '2024-11-22T12:37:13.616Z',\n//     '2035-11-22T16:22:36.745Z',\n//     '2036-11-22T16:22:36.745Z',\n//     '2036-11-22T16:22:36.745Z'\n// //   );\n\n// var test = [\n//   '2020-02-02T15:05:09.526Z',\n//   '2021-05-11T09:39:16.002Z',\n//   '2022-11-22T12:37:13.616Z',\n//   '2023-04-25T12:37:13.616Z',\n//   '2023-02-22T16:22:36.745Z',\n//   '2022-07-21T12:37:13.616Z',\n//   '2023-05-29T16:23:07.723Z',\n\n//   '2024-11-22T15:05:09.526Z',\n//   '2024-11-22T09:39:16.002Z',\n//   '2024-11-22T12:37:13.616Z',\n//   '2024-11-22T12:37:13.616Z',\n//   '2024-11-22T16:22:36.745Z',\n//   '2024-11-22T12:37:13.616Z',\n//   '2034-04-29T16:23:07.723Z',\n\n//   '2023-02-02T15:05:09.526Z',\n//   '2022-05-11T09:39:16.002Z',\n//   '2022-12-22T12:37:13.616Z',\n//   '2022-03-25T12:37:13.616Z',\n//   '2022-03-22T16:22:36.745Z',\n//   '2023-02-21T12:37:13.616Z',\n//   '2023-04-29T16:23:07.723Z',\n\n//   '2023-05-25T12:37:13.616Z',\n//   '2023-03-22T16:22:36.745Z',\n// ];\n\n// var arrayDataAddApp = [\n//   ...test,\n//   '2020-04-25T12:37:13.616Z',\n//   '2020-02-22T16:22:36.745Z',\n//   '2022-02-22T16:22:36.745Z',\n//   '2023-02-22T16:22:36.745Z',\n\n//   '2025-04-25T12:37:13.616Z',\n//   '2026-02-22T16:22:36.745Z',\n//   '2027-02-22T16:22:36.745Z',\n//   '2028-02-22T16:22:36.745Z',\n// ]; //del\n\n// var arrayDataCloseApp = [\n//   ...test,\n//   '2023-10-24T12:37:13.616Z',\n//   '2023-10-23T12:37:13.616Z',\n//   '2024-11-22T15:05:09.526Z',\n//   '2024-11-22T09:39:16.002Z',\n//   '2024-11-22T12:37:13.616Z',\n//   '2024-11-22T12:37:13.616Z',\n//   '2024-11-22T16:22:36.745Z',\n//   '2035-11-22T16:22:36.745Z',\n//   '2036-11-22T16:22:36.745Z',\n//   '2038-11-22T16:22:36.745Z',\n//   '2039-11-22T16:22:36.745Z',\n//   '2040-11-22T16:22:36.745Z',\n//   '2037-12-22T16:22:36.745Z',\n// ]; //del\n"],"names":["caclStatisticsEntries","array","reduce","acc","data","indexInStatistics","findIndex","el","push","dynamicLebels","lebels","sortedAndFormatedLabels","sort","map","formatingToMonthAndYear","Set","format","parseISO","sortAndFormatedArray","useDynamicDataLebels","requestData","useSelector","getRequest","arrayDataAddApp","arrayDataCloseApp","allData","dataAdd","dataClose","flat","addStatictics","closeStatictics"],"sourceRoot":""}