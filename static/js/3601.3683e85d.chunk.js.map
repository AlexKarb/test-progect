{"version":3,"file":"static/js/3601.3683e85d.chunk.js","mappings":"uPAEaA,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,WAAYC,EAAvB,EAAuBA,QAAvB,OAC1B,UAAC,EAAAC,cAAD,YACE,SAAC,EAAAC,OAAD,CAAQJ,OAAQA,EAAQK,OAAK,EAACC,QAASL,EAAvC,iCAGA,SAAC,EAAAG,OAAD,CAAQJ,OAAQA,EAAQO,UAAQ,EAACD,QAASJ,EAA1C,+B,mICLSC,EAAgBK,EAAAA,GAAAA,IAAH,iHAMbJ,EAASI,EAAAA,GAAAA,OAAAA,OAAoB,SAAAC,GAAI,MAAK,CACjDC,KAAM,YADcF,CAAH,gRAQG,YAAkC,IAA/BR,EAA8B,EAA9BA,OAAQK,EAAsB,EAAtBA,MAAOE,EAAe,EAAfA,SACpC,OAAKF,GAAoB,YAAXL,GAA0BO,GAAuB,YAAXP,EAC3C,wBAEA,6B,6GCjBAW,EAAe,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,UAAWd,EAAa,EAAbA,OAC/D,OACE,SAAC,EAAAe,YAAD,CACEd,WAAYW,EACZC,YAAaA,EACbC,UAAWA,EACXd,OAAQA,EAJV,UAME,SAAC,EAAAgB,KAAD,gM,+GCRNC,IAAAA,cAAoB,SAEb,IAAMC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAUlB,EAAvB,EAAuBA,QAASmB,EAAhC,EAAgCA,KAAhC,OACpB,UAAC,IAAD,CACEC,OAAQD,EACRE,eAAgBrB,EAChBsB,MAAOC,EAAAA,aACPC,aAAa,gBACbC,iBAAiB,UALnB,UAOGR,EACAC,O,wECdE,IAAMK,EAAe,CAC1BG,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,SAAU,OACVC,UAAW,qBACXC,SAAU,qBACVC,QAAS,EACTC,OAAQ,OACRC,WAAY,U,uJCNHzB,EAAc,SAAC,GAMrB,IALLd,EAKI,EALJA,WACAY,EAII,EAJJA,YACAC,EAGI,EAHJA,UACAM,EAEI,EAFJA,SACApB,EACI,EADJA,OAEMyC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,cAEzB,OACE,UAAC,EAAAzB,OAAD,CAAQhB,QAASY,EAAWO,KAAMR,EAAlC,UACY,UAAT4B,IAAoB,SAAC,EAAAG,SAAD,CAAU1C,QAASY,IAC9B,UAAT2B,IACC,UAAC,EAAAI,UAAD,WACGzB,GACD,SAAC,EAAArB,aAAD,CACEC,OAAQA,EACRC,WAAYA,EACZC,QAAS,kBAAMY,GAAU,c,6HCvBxB+B,EAAYrC,EAAAA,GAAAA,IAAH,mHAOTQ,EAAOR,EAAAA,GAAAA,IAAH,qE,yGCNJoC,EAAW,SAAC,GAAiB,IAAf1C,EAAc,EAAdA,QACzB,OACE,UAAC,EAAA2C,UAAD,YACE,SAAC,EAAA7B,KAAD,gLAEA,SAAC,EAAAZ,OAAD,CACEC,OAAK,EACLL,OAAQ,WACRM,QAAS,kBAAMJ,GAAQ,IACvBQ,KAAK,SAJP","sources":["module/Modal/component/ButtonsBlock/ButtonsBlock.jsx","module/Modal/component/ButtonsBlock/ButtonsBlock.styled.jsx","module/Modal/component/DeletedModal/DeletedModal.jsx","module/Modal/component/MainElementModal/Modal.jsx","module/Modal/component/MainElementModal/Modal.styled.jsx","module/Modal/component/ModalWindow/ModalWindow.jsx","module/Modal/component/ModalWindow/ModalWindow.styled.jsx","module/Modal/component/NoAccess/NoAccess.jsx"],"sourcesContent":["import { Button, ButtonWrapper } from './ButtonsBlock.styled';\n\nexport const ButtonsBlock = ({ action, changeType, onClose }) => (\n  <ButtonWrapper>\n    <Button action={action} agree onClick={changeType}>\n      Так\n    </Button>\n    <Button action={action} disagree onClick={onClose}>\n      Ні\n    </Button>\n  </ButtonWrapper>\n);\n","import styled from 'styled-components';\n\nexport const ButtonWrapper = styled.div`\n  width: 180px;\n  display: flex;\n  justify-content: space-between;\n  margin: 0 auto;\n`;\nexport const Button = styled.button.attrs(prop => ({\n  type: 'button',\n}))`\n  width: 75px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  background-color: ${({ action, agree, disagree }) => {\n    if ((agree && action !== 'deleted') || (disagree && action === 'deleted')) {\n      return 'var(--first-color-bg)';\n    } else {\n      return 'var(--main-text-color)';\n    }\n  }};\n\n  border: none;\n  padding: 8px 0;\n  border-radius: 5px;\n  font-size: 14px;\n  color: #fff;\n  cursor: pointer;\n`;\n","import { ModalWindow } from '../ModalWindow/ModalWindow';\nimport { Text } from '../ModalWindow/ModalWindow.styled';\n\nexport const DeletedModal = ({ onChange, modalIsOpen, setIsOpen, action }) => {\n  return (\n    <ModalWindow\n      changeType={onChange}\n      modalIsOpen={modalIsOpen}\n      setIsOpen={setIsOpen}\n      action={action}\n    >\n      <Text>Ви дійсно хочете видалити заявку?</Text>\n    </ModalWindow>\n  );\n};\n","import Modal from 'react-modal';\nimport { customStyles } from './Modal.styled';\n\nModal.setAppElement('#root');\n\nexport const ModalW = ({ elements, children, onClose, open }) => (\n  <Modal\n    isOpen={open}\n    onRequestClose={onClose}\n    style={customStyles}\n    contentLabel=\"Example Modal\"\n    overlayClassName=\"Overlay\"\n  >\n    {elements}\n    {children}\n  </Modal>\n);\n","export const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    overflow: 'auto',\n    maxHeight: 'calc(100vh - 60px)',\n    maxWidth: 'calc(100vw - 30px)',\n    padding: 0,\n    border: 'none',\n    background: 'none',\n  },\n};\n","import { ModalW } from 'module/Modal/component/MainElementModal/Modal';\nimport { useSelector } from 'react-redux';\nimport { getRoleValue } from 'redux/authSlice';\nimport { Container } from './ModalWindow.styled';\nimport { NoAccess } from '../NoAccess/NoAccess';\nimport { ButtonsBlock } from 'module/Modal/component/ButtonsBlock/ButtonsBlock';\n\nexport const ModalWindow = ({\n  changeType,\n  modalIsOpen,\n  setIsOpen,\n  children,\n  action,\n}) => {\n  const role = useSelector(getRoleValue);\n\n  return (\n    <ModalW onClose={setIsOpen} open={modalIsOpen}>\n      {role === 'GUEST' && <NoAccess onClose={setIsOpen} />}\n      {role !== 'GUEST' && (\n        <Container>\n          {children}\n          <ButtonsBlock\n            action={action}\n            changeType={changeType}\n            onClose={() => setIsOpen(false)}\n          />\n        </Container>\n      )}\n    </ModalW>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  background-color: white;\n  width: 300px;\n  padding: 30px 15px;\n  text-align: center;\n`;\n\nexport const Text = styled.div`\n  margin-bottom: 30px;\n  font-size: 20px;\n`;\n","import { Container, Text } from '../ModalWindow/ModalWindow.styled';\nimport { Button } from '../ButtonsBlock/ButtonsBlock.styled';\n\nexport const NoAccess = ({ onClose }) => {\n  return (\n    <Container>\n      <Text>У вас недостатньо прав доступу</Text>\n\n      <Button\n        agree\n        action={'noAccess'}\n        onClick={() => onClose(false)}\n        type=\"button\"\n      >\n        Закрити\n      </Button>\n    </Container>\n  );\n};\n"],"names":["ButtonsBlock","action","changeType","onClose","ButtonWrapper","Button","agree","onClick","disagree","styled","prop","type","DeletedModal","onChange","modalIsOpen","setIsOpen","ModalWindow","Text","Modal","ModalW","elements","children","open","isOpen","onRequestClose","style","customStyles","contentLabel","overlayClassName","content","top","left","right","bottom","marginRight","transform","overflow","maxHeight","maxWidth","padding","border","background","role","useSelector","getRoleValue","NoAccess","Container"],"sourceRoot":""}