{"version":3,"file":"static/js/9392.929e2285.chunk.js","mappings":"6PAGaA,EAAmB,WAC9B,OAA4BC,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,eAAcC,KAAI,SAAAC,GAAI,OACpBC,EAAAA,EAAAA,8BAA6BD,GAAME,MAAK,SAAAP,GAAM,OAC5CC,GAAU,SAAAO,GAAE,yBACPA,GADO,cAETH,EAAOL,eAIb,IAEH,IAAMS,GAASC,EAAAA,EAAAA,UACb,kBACEP,EAAAA,EAAAA,eACGC,KAAI,SAAAC,GAAI,OAAIL,EAAOK,MACnBM,cAASC,KAEd,CAACZ,IAGH,MAAO,CAACA,EAAQS,K,qXCzBlBI,IAAAA,SAAAA,QAAyB,sDAElB,IAAMV,EAAc,iBAAM,CAC/B,UACA,cACA,YACA,UACA,QAGWW,EAAkB,mCAAG,oGACTD,IAAAA,IAAU,SADD,cAC1BE,EAD0B,gCAEzBA,QAFyB,IAEzBA,OAFyB,EAEzBA,EAAUC,MAFe,2CAAH,qDAKlBC,EAAkB,mCAAG,WAAMC,GAAN,uFACTL,IAAAA,IAAA,gBAAmBK,IADV,cAC1BH,EAD0B,gCAEzBA,QAFyB,IAEzBA,OAFyB,EAEzBA,EAAUC,MAFe,2CAAH,sDAKlBG,EAAqB,mCAAG,WAAMd,GAAN,uFAChBS,IADgB,OAC7BE,EAD6B,OAEnCI,QAAQC,IAAI,SAAUL,GAFa,KAI3BX,EAJ2B,OAK5B,YAL4B,OAQ5B,gBAR4B,OAW5B,cAX4B,OAc5B,YAd4B,wDAMxBW,QANwB,IAMxBA,OANwB,EAMxBA,EAAMM,QAAO,kBAA2B,YAA3B,EAAGC,WANQ,uCASxBP,QATwB,IASxBA,OATwB,EASxBA,EAAMM,QAAO,kBAA2B,gBAA3B,EAAGC,WATQ,uCAYxBP,QAZwB,IAYxBA,OAZwB,EAYxBA,EAAMM,QAAO,kBAA2B,cAA3B,EAAGC,WAZQ,wCAexBP,QAfwB,IAexBA,OAfwB,EAexBA,EAAMM,QAAO,kBAA2B,YAA3B,EAAGC,WAfQ,iCAkBxBP,GAlBwB,4CAAH,sDAsBrBV,EAA4B,mCAAG,WAAMD,GAAN,uFACvBc,EAAsBd,GADC,cACpCW,EADoC,yBAEnCA,EAAKQ,QAF8B,2CAAH,sDAK5BC,EAAe,mCAAG,WAAMT,GAAN,iFACvBH,IAAAA,KAAW,QAASG,GAAMT,KAAKa,QAAQC,KAAKK,MAAMN,QAAQC,KADnC,2CAAH,sDAIfM,EAAe,mCAAG,WAAOT,EAAIF,GAAX,iFACvBH,IAAAA,IAAA,gBACUK,GAAMF,GACnBT,MAAK,SAAUQ,GACdK,QAAQC,IAAIN,MAEbW,OAAM,SAAUE,GACfR,QAAQC,IAAIO,MAPa,2CAAH","sources":["module/pages/Statistics/service/useGetStatistics.js","service/api-service.js"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport { getLengthOfSortedPublication, keysOfTypes } from 'service/api-service';\n\nexport const useGetStatistics = () => {\n  const [number, setNumber] = useState(false);\n\n  useEffect(() => {\n    keysOfTypes().map(type =>\n      getLengthOfSortedPublication(type).then(number =>\n        setNumber(pS => ({\n          ...pS,\n          [type]: number,\n        }))\n      )\n    );\n  }, []);\n\n  const isLoad = useMemo(\n    () =>\n      keysOfTypes()\n        .map(type => number[type])\n        .includes(undefined),\n\n    [number]\n  );\n\n  return [number, isLoad];\n};\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://621faf0dce99a7de19458441.mockapi.io/ua-help';\n\nexport const keysOfTypes = () => [\n  'pending',\n  'in progress',\n  'completed',\n  'deleted',\n  'all',\n];\n\nexport const getAllPublications = async () => {\n  const response = await axios.get('/help');\n  return response?.data;\n};\n\nexport const getPublicationById = async id => {\n  const response = await axios.get(`/help/${id}`);\n  return response?.data;\n};\n\nexport const getSortedPublications = async type => {\n  const data = await getAllPublications();\n  console.log('~ data', data);\n\n  switch (type) {\n    case 'pending':\n      return data?.filter(({ status }) => status === 'pending');\n\n    case 'in progress':\n      return data?.filter(({ status }) => status === 'in progress');\n\n    case 'completed':\n      return data?.filter(({ status }) => status === 'completed');\n\n    case 'deleted':\n      return data?.filter(({ status }) => status === 'deleted');\n\n    default:\n      return data;\n  }\n};\n\nexport const getLengthOfSortedPublication = async type => {\n  const data = await getSortedPublications(type);\n  return data.length;\n};\n\nexport const postPublication = async data => {\n  await axios.post('/help', data).then(console.log).catch(console.log);\n};\n\nexport const editPublication = async (id, data) => {\n  await axios\n    .put(`/help/${id}`, data)\n    .then(function (response) {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n};\n"],"names":["useGetStatistics","useState","number","setNumber","useEffect","keysOfTypes","map","type","getLengthOfSortedPublication","then","pS","isLoad","useMemo","includes","undefined","axios","getAllPublications","response","data","getPublicationById","id","getSortedPublications","console","log","filter","status","length","postPublication","catch","editPublication","error"],"sourceRoot":""}