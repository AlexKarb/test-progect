{"version":3,"file":"static/js/3635.3053d24d.chunk.js","mappings":"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","sources":["module/Filter/component/FilterIcon/FilterIcon.jsx","module/pages/Statistics/component/LineChart/LineChart.jsx","module/pages/Statistics/component/LineChart/LineChart.styled.jsx","module/pages/Statistics/component/LineChart/chartOpt/addAppLine.js","module/pages/Statistics/component/LineChart/chartOpt/chartTitle.js","module/pages/Statistics/component/LineChart/chartOpt/closeAppLine.js","module/pages/Statistics/component/LineChart/chartOpt/legend.js","module/pages/Statistics/component/LineChart/chartOpt/scales.js","module/pages/Statistics/component/LineChart/hooks/caclStatisticsEntries.js","module/pages/Statistics/component/LineChart/hooks/dynamicLebels.js","module/pages/Statistics/component/LineChart/hooks/formatingToMonthAndYear.js","module/pages/Statistics/component/LineChart/hooks/sortAndFormatedArray.js","module/pages/Statistics/component/LineChart/hooks/useDynamicDataLebels.js"],"sourcesContent":["import styled from 'styled-components';\nimport { BiFilterAlt } from 'react-icons/bi';\n\nexport const FilterIcon = styled(BiFilterAlt).attrs(pr => ({\n  color: pr.isopen === 'true' ? 'var(--unactive-color-bg)' : 'white',\n}))`\n  width: 25px;\n  height: 25px;\n  position: absolute;\n  right: 24px;\n  top: 12px;\n  color: white;\n\n  ${({ type }) => {\n    if (type === 'completed' || type === 'deleted') {\n      return 'top: 70px; right: 12px;';\n    }\n  }}\n\n  @media screen and (min-width: 768px) {\n    position: absolute;\n    width: 36px;\n    height: 36px;\n    right: 15px;\n    top: 15px;\n\n    ${({ type }) => {\n      if (type === 'completed' || type === 'deleted') {\n        return 'top: 80px;';\n      }\n    }}\n  }\n\n  @media screen and (min-width: 1024px) {\n    width: 30px;\n    height: 30px;\n  }\n`;\n","import { Line } from 'react-chartjs-2';\nimport { useState } from 'react';\nimport { BntView, Container, FilterIcn, SpnArow } from './LineChart.styled';\nimport { useDynamicDataLebels } from './hooks/useDynamicDataLebels';\nimport { addAppLine, chartTitle } from './chartOpt';\nimport { closeAppLine, legendOption, scalesOption } from './chartOpt';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nexport const LineChart = () => {\n  const [activeBtn, setActiveBtn] = useState(false);\n  const [dymanicDataLebels, addStatictics, closeStatictics] = useDynamicDataLebels();\n\n  const dynamicMinXscale = activeBtn\n    ? undefined\n    : dymanicDataLebels[dymanicDataLebels.length - 23];\n\n  return (\n    <div>\n      <Container>\n        {dymanicDataLebels.length >= 23 && (\n          <BntView onClick={() => setActiveBtn(!activeBtn)} open={activeBtn}>\n            {activeBtn ? 'Скорочний звіт' : `Повний звіт `}\n            <SpnArow open={activeBtn}> &#10142;</SpnArow>\n          </BntView>\n        )}\n        <FilterIcn />\n        <Line\n          options={{\n            responsive: true,\n            maintainAspectRatio: false,\n            tension: 0.5,\n            plugins: {\n              legend: legendOption,\n              title: chartTitle,\n            },\n            scales: scalesOption({ minX: dynamicMinXscale }),\n          }}\n          data={{\n            labels: [...dymanicDataLebels],\n            datasets: [closeAppLine(closeStatictics), addAppLine(addStatictics)],\n            scale: {\n              type: 'time',\n            },\n          }}\n        />\n      </Container>\n    </div>\n  );\n};\n","import { FilterIcon } from 'module/Filter/component/FilterIcon/FilterIcon';\nimport styled from 'styled-components';\n\nexport const FilterIcn = styled(FilterIcon)`\n  width: 16px;\n  height: 16px;\n  fill: #afaff085;\n\n  position: absolute;\n  left: 27px;\n  top: 266px;\n\n  @media screen and (min-width: 768px) {\n    left: 220px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    left: 180px;\n  }\n`;\n\nexport const Container = styled.div`\n  width: 300px;\n  height: 300px;\n  background-color: #ffffffda;\n  padding: 10px 30px;\n  color: #fff;\n  border-radius: 2px;\n  cursor: pointer;\n  position: relative;\n  display: flex;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    width: 700px;\n    height: 300px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    width: 600px;\n    height: 300px;\n  }\n\n  @media screen and (min-width: 1250px) {\n    width: 600px;\n    height: 300px;\n    margin-right: 4px;\n  }\n`;\n\nexport const BntView = styled.button`\n  & {\n    position: absolute;\n    right: 40px;\n    top: 26px;\n    width: 110px;\n    height: 20px;\n    background-color: transparent;\n    border: none;\n    padding: 3px;\n    color: #2f4fbb;\n    font-size: 10px;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    ${({ open }) => open && 'flex-direction: row-reverse;'}\n  }\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 2px;\n    height: 0.6px;\n    width: ${({ open }) => (open ? '100px' : '80px')};\n    background-color: #939bbd7d;\n  }\n`;\n\nexport const SpnArow = styled.span`\n  color: #2f4fbb;\n  padding-left: 5px;\n  font-size: 13px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  ${({ open }) => open && 'rotate: 180deg;'}\n`;\n","export const addAppLine = statistics => ({\n  label: 'Нові',\n  data: statistics.map(el => ({ x: el[0], y: el[1] })),\n  borderColor: '#176012',\n  backgroundColor: '#2099189e',\n  pointRadius: 1,\n  borderWidth: 1,\n  fill: {\n    target: 'origin',\n    above: '#3764343d',\n  },\n});\n","export const chartTitle = {\n  display: true,\n  text: 'Статистика роботи організації',\n  padding: {\n    top: 15,\n    bottom: 20,\n  },\n};\n","export const closeAppLine = statistics => ({\n  label: 'Виконані',\n  data: statistics.map(el => ({ x: el[0], y: el[1] })),\n  borderColor: '#3b73e4',\n  backgroundColor: '#6692eb96',\n  pointRadius: 1,\n  borderWidth: 1,\n  fill: {\n    target: 'origin',\n    above: '#7ea2ea40',\n  },\n});\n","export const legendOption = {\n  display: true,\n  position: 'bottom',\n};\n","export const scalesOption = ({ minX }) => {\n  return {\n    x: {\n      axis: 'x',\n      offset: true,\n      min: minX,\n\n      grid: {\n        display: true,\n        drawTicks: false,\n        z: -2,\n      },\n    },\n\n    y: {\n      axis: 'y',\n      min: 0,\n      title: { display: true, text: 'Кількість заявок', padding: 3 },\n      grid: {\n        display: false,\n        drawTicks: false,\n        z: -2,\n      },\n      ticks: {\n        count: 6,\n        stepSize: 10,\n      },\n    },\n  };\n};\n","export const caclStatisticsEntries = array => {\n  return array.reduce((acc, data) => {\n    const indexInStatistics = acc.findIndex(el => el[0] === data);\n\n    if (indexInStatistics === -1) {\n      acc.push([data, 1]);\n    } else {\n      const lebelInStatistics = acc[indexInStatistics];\n      lebelInStatistics[1]++;\n    }\n\n    return acc;\n  }, []);\n};\n","import { formatingToMonthAndYear } from './formatingToMonthAndYear';\n\nexport const dynamicLebels = lebels => {\n  const sortedAndFormatedLabels = lebels\n    .sort()\n    .map(data => formatingToMonthAndYear(data));\n\n  const labelsOfMonthAndYear = [...new Set(sortedAndFormatedLabels)];\n\n  return labelsOfMonthAndYear;\n};\n","import { parseISO, format } from 'date-fns';\n\nexport const formatingToMonthAndYear = data => {\n  return format(parseISO(data), `MMM yyyy`);\n};\n","import { formatingToMonthAndYear } from './formatingToMonthAndYear';\n\nexport const sortAndFormatedArray = array => {\n  return array.sort().map(data => formatingToMonthAndYear(data));\n};\n","import { useSelector } from 'react-redux';\nimport { getRequest } from 'service/redux/request';\nimport { caclStatisticsEntries } from './caclStatisticsEntries';\nimport { dynamicLebels } from './dynamicLebels';\nimport { sortAndFormatedArray } from './sortAndFormatedArray';\n\nexport const useDynamicDataLebels = () => {\n  const requestData = useSelector(getRequest);\n  const arrayDataAddApp = [];\n  const arrayDataCloseApp = [];\n\n  const allData = requestData\n    .map(({ dataAdd, dataClose }) => {\n      if (dataClose) arrayDataCloseApp.push(dataClose);\n      if (dataAdd) arrayDataAddApp.push(dataAdd);\n\n      return dataClose ? [dataAdd, dataClose] : [dataAdd];\n    })\n    .flat();\n\n  const addStatictics = caclStatisticsEntries(sortAndFormatedArray(arrayDataAddApp));\n  const closeStatictics = caclStatisticsEntries(sortAndFormatedArray(arrayDataCloseApp));\n  const dymanicDataLebels = dynamicLebels(allData);\n\n  return [dymanicDataLebels, addStatictics, closeStatictics];\n};\n\n//   allData.push(\n//     ...test,\n//     '2023-10-24T12:37:13.616Z',\n//     '2023-10-23T12:37:13.616Z',\n//     '2020-04-25T12:37:13.616Z',\n//     '2020-02-22T16:22:36.745Z',\n//     '2022-02-22T16:22:36.745Z',\n//     '2023-02-22T16:22:36.745Z',\n//     '2036-11-22T16:22:36.745Z',\n//     '2038-11-22T16:22:36.745Z',\n//     '2039-11-22T16:22:36.745Z',\n//     '2040-11-22T16:22:36.745Z',\n//     '2037-12-22T16:22:36.745Z',\n\n//     '2025-04-25T12:37:13.616Z',\n//     '2026-02-22T16:22:36.745Z',\n//     '2027-02-22T16:22:36.745Z',\n//     '2028-02-22T16:22:36.745Z',\n//     '2024-11-22T15:05:09.526Z',\n//     '2024-11-22T09:39:16.002Z',\n//     '2024-11-22T12:37:13.616Z',\n//     '2024-11-22T12:37:13.616Z',\n//     '2024-11-22T16:22:36.745Z',\n//     '2024-11-22T12:37:13.616Z',\n//     '2035-11-22T16:22:36.745Z',\n//     '2036-11-22T16:22:36.745Z',\n//     '2036-11-22T16:22:36.745Z'\n// //   );\n\n// var test = [\n//   '2020-02-02T15:05:09.526Z',\n//   '2021-05-11T09:39:16.002Z',\n//   '2022-11-22T12:37:13.616Z',\n//   '2023-04-25T12:37:13.616Z',\n//   '2023-02-22T16:22:36.745Z',\n//   '2022-07-21T12:37:13.616Z',\n//   '2023-05-29T16:23:07.723Z',\n\n//   '2024-11-22T15:05:09.526Z',\n//   '2024-11-22T09:39:16.002Z',\n//   '2024-11-22T12:37:13.616Z',\n//   '2024-11-22T12:37:13.616Z',\n//   '2024-11-22T16:22:36.745Z',\n//   '2024-11-22T12:37:13.616Z',\n//   '2034-04-29T16:23:07.723Z',\n\n//   '2023-02-02T15:05:09.526Z',\n//   '2022-05-11T09:39:16.002Z',\n//   '2022-12-22T12:37:13.616Z',\n//   '2022-03-25T12:37:13.616Z',\n//   '2022-03-22T16:22:36.745Z',\n//   '2023-02-21T12:37:13.616Z',\n//   '2023-04-29T16:23:07.723Z',\n\n//   '2023-05-25T12:37:13.616Z',\n//   '2023-03-22T16:22:36.745Z',\n// ];\n\n// var arrayDataAddApp = [\n//   ...test,\n//   '2020-04-25T12:37:13.616Z',\n//   '2020-02-22T16:22:36.745Z',\n//   '2022-02-22T16:22:36.745Z',\n//   '2023-02-22T16:22:36.745Z',\n\n//   '2025-04-25T12:37:13.616Z',\n//   '2026-02-22T16:22:36.745Z',\n//   '2027-02-22T16:22:36.745Z',\n//   '2028-02-22T16:22:36.745Z',\n// ]; //del\n\n// var arrayDataCloseApp = [\n//   ...test,\n//   '2023-10-24T12:37:13.616Z',\n//   '2023-10-23T12:37:13.616Z',\n//   '2024-11-22T15:05:09.526Z',\n//   '2024-11-22T09:39:16.002Z',\n//   '2024-11-22T12:37:13.616Z',\n//   '2024-11-22T12:37:13.616Z',\n//   '2024-11-22T16:22:36.745Z',\n//   '2035-11-22T16:22:36.745Z',\n//   '2036-11-22T16:22:36.745Z',\n//   '2038-11-22T16:22:36.745Z',\n//   '2039-11-22T16:22:36.745Z',\n//   '2040-11-22T16:22:36.745Z',\n//   '2037-12-22T16:22:36.745Z',\n// ]; //del\n"],"names":["FilterIcon","styled","BiFilterAlt","attrs","pr","color","isopen","type","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","LineChart","useState","activeBtn","setActiveBtn","useDynamicDataLebels","dymanicDataLebels","addStatictics","closeStatictics","dynamicMinXscale","undefined","length","Container","BntView","onClick","open","SpnArow","FilterIcn","options","responsive","maintainAspectRatio","tension","plugins","legend","legendOption","title","chartTitle","scales","scalesOption","minX","data","labels","datasets","closeAppLine","addAppLine","scale","statistics","label","map","el","x","y","borderColor","backgroundColor","pointRadius","borderWidth","fill","target","above","display","text","padding","top","bottom","position","axis","offset","min","grid","drawTicks","z","ticks","count","stepSize","caclStatisticsEntries","array","reduce","acc","indexInStatistics","findIndex","push","dynamicLebels","lebels","sortedAndFormatedLabels","sort","formatingToMonthAndYear","Set","format","parseISO","sortAndFormatedArray","requestData","useSelector","getRequest","arrayDataAddApp","arrayDataCloseApp","allData","dataAdd","dataClose","flat"],"sourceRoot":""}