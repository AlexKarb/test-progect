{"version":3,"file":"static/js/3981.a5035424.chunk.js","mappings":"qQAYaA,EAAO,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,SAAUC,EAAsD,EAAtDA,cAAeC,EAAuC,EAAvCA,KAAuC,IAAjCC,UAAAA,OAAiC,SAAdC,EAAc,EAAdA,QACvE,GAA0CC,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAEA,OACE,SAAC,KAAD,CACEN,cAAeA,EACfO,iBAAkBC,EAAAA,cAClBT,SAAQ,mCAAE,WAAOU,EAAP,iFAAiBC,EAAjB,EAAiBA,UAAjB,SACFX,EAASU,GADP,OAEK,SAATR,GAAiBS,IACrBP,GAAWA,IAHH,2CAAF,wDAHV,SASG,YAAkC,IAA/BM,EAA8B,EAA9BA,OAAQE,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAClB,OACE,SAAC,EAAAC,oBAAD,CAAqBZ,KAAMA,EAA3B,UACE,iCACE,SAAC,EAAAa,SAAD,CAAUC,QAAS,CAAEJ,OAAAA,EAAQC,QAAAA,EAASI,aAAcd,MAEpD,SAAC,EAAAe,SAAD,CACEZ,cAAeA,EACfU,QAAS,CAAEJ,OAAAA,EAAQK,aAAcd,GACjCgB,cAAeT,EAAOU,YAExB,SAAC,EAAAC,eAAD,KAEA,SAAC,EAAAC,OAAD,CACEC,QAAS,kBAAMhB,GAAiB,IAChCiB,KACMrB,EAAkB,4DACT,SAATD,GAAoBC,EACX,SAATD,EAAwB,wDAA5B,EAD0C,mG,wFCxC/CO,EAAgBgB,EAAAA,KAAaC,MAAM,CAC9CC,SAAUF,EAAAA,KAAaC,MAAM,CAC3BE,KAAMH,EAAAA,KACHI,IAAI,EAAG,2IACPC,IAAI,GAAI,mHACRC,SAAS,wJAEZC,IAAKP,EAAAA,KACFI,IAAI,EAAG,2IACPC,IAAI,GAAI,mHACRC,SAAS,wJAEZE,OAAQR,EAAAA,KACLI,IAAI,EAAG,2IACPC,IAAI,GAAI,mHACRC,SAAS,0JAGdG,SAAUT,EAAAA,KACVU,KAAMV,EAAAA,KAENL,SAAUK,EAAAA,KAAYW,GAAGX,EAAAA,MAAcI,IAAI,EAAG,iGAE9CQ,WAAYZ,EAAAA,Q,6ECvBDxB,EAAgB,CAC3B0B,SAAU,CACRC,KAAM,GACNI,IAAK,GACLC,OAAQ,IAEVb,SAAU,GACViB,YAAYC,E,SAAAA,wBACZJ,UAAU,EACVC,KAAM,K,8HCTKI,EAAQC,EAAAA,GAAAA,GAAH,8cA0BLC,EAAYD,EAAAA,GAAAA,IAAH,2C,uJCGtB,UAxB0B,WACxB,MAA6BE,EAAAA,QAAAA,MAA7B,eAAOC,EAAP,KAAcxC,EAAd,KAAcA,UAERyC,EAAY,mCAAG,WAAMlC,GAAN,2FACEiC,EAAIjC,GADN,QACbmC,EADa,QAGRC,OAAMC,EAAAA,EAAAA,cAAa,gGAC1BF,EAAOG,QAAOC,EAAAA,EAAAA,aAAW,UAACJ,EAAOG,aAAR,iBAAC,EAAcF,YAAf,aAAC,EAAoBI,SAJ/B,2CAAH,sDAOlB,OACE,SAAC,EAAAC,cAAD,WACE,UAAC,EAAAV,UAAD,YACE,SAAC,EAAAF,MAAD,2GACA,SAAC,EAAAxC,KAAD,CACEC,SAAU4C,EACV3C,cAAeA,EAAAA,cACfE,UAAWA","sources":["module/Form/index.jsx","module/Form/service/Schema.js","module/Form/service/initialValues.js","module/pages/CreateApplication/CreateApplication.styled.jsx","module/pages/CreateApplication/index.jsx"],"sourcesContent":["import { Formik } from 'formik';\nimport { useState } from 'react';\nimport {\n  Button,\n  DetailsComment,\n  TypeHelp,\n  UserData,\n  StyledFormContainer,\n} from './component';\n\nimport { RequestSchema } from './service/Schema';\n\nexport const Form = ({ onSubmit, initialValues, type, isLoading = false, onClose }) => {\n  const [isSubmitClick, setIsSubmitClick] = useState(false);\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={RequestSchema}\n      onSubmit={async (values, { resetForm }) => {\n        await onSubmit(values);\n        if (type !== 'edit') resetForm();\n        onClose && onClose();\n      }}\n    >\n      {({ values, errors, touched }) => {\n        return (\n          <StyledFormContainer type={type}>\n            <>\n              <UserData options={{ errors, touched, isSubmitting: isLoading }} />\n\n              <TypeHelp\n                isSubmitClick={isSubmitClick}\n                options={{ errors, isSubmitting: isLoading }}\n                selectedTypes={values.typeHelp}\n              />\n              <DetailsComment />\n\n              <Button\n                onClick={() => setIsSubmitClick(true)}\n                text={(() => {\n                  if (isLoading) return 'Зачекайте...';\n                  if (type !== 'edit' && !isLoading) return 'Зарегеструвати';\n                  if (type === 'edit') return 'Зберегти';\n                })()}\n              />\n            </>\n          </StyledFormContainer>\n        );\n      }}\n    </Formik>\n  );\n};\n","import * as Yup from 'yup';\n\nexport const RequestSchema = Yup.object().shape({\n  contacts: Yup.object().shape({\n    name: Yup.string()\n      .min(2, '*Занадто коротке значення')\n      .max(20, '*Дуже багато символів')\n      .required(\"*Поле являється обов'язковим\"),\n\n    tel: Yup.string()\n      .min(4, '*Занадто коротке значення')\n      .max(20, '*Дуже багато символів')\n      .required(\"*Поле являється обов'язковим\"),\n\n    adress: Yup.string()\n      .min(2, '*Занадто коротке значення')\n      .max(30, '*Дуже багато символів')\n      .required(\"*Поле являється обов'язковим\"),\n  }),\n\n  delivery: Yup.boolean(),\n  info: Yup.string(),\n\n  typeHelp: Yup.array().of(Yup.string()).min(1, '*Оберіть значення!'),\n\n  additional: Yup.object(),\n});\n","import { nameObjectTypeOfHelp } from 'service/typeOfHelp/dataFromTypeOfHelp';\n\nexport const initialValues = {\n  contacts: {\n    name: '',\n    tel: '',\n    adress: '',\n  },\n  typeHelp: [],\n  additional: nameObjectTypeOfHelp(),\n  delivery: false,\n  info: '',\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  padding: 16px;\n  color: white;\n  font-size: 20px;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    padding: 20px;\n    font-size: 30px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    position: absolute;\n    top: -60px;\n    left: 0px;\n    font-size: 28px;\n    background-color: #3685bd;\n    width: 316px;\n    height: 59px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 416px;\n  }\n`;\n\nexport const Container = styled.div`\n  padding: 20px;\n`;\n","import { initialValues } from 'module/Form/service/initialValues';\nimport { notifyChange, notifyError } from 'module/Toaster/Toaster';\nimport { MainContainer } from 'module/Utils/MainContainer/MainContainer';\nimport { Request } from 'service/redux/api';\nimport { Form } from '../../Form';\nimport { Container, Title } from './CreateApplication.styled';\n\nconst CreateApplication = () => {\n  const [add, { isLoading }] = Request.add();\n\n  const handleSubmit = async values => {\n    const result = await add(values);\n\n    if (result.data) notifyChange('Заявка оформлена!');\n    if (result.error) notifyError(result.error?.data?.message);\n  };\n\n  return (\n    <MainContainer>\n      <Container>\n        <Title>Створення заявки</Title>\n        <Form\n          onSubmit={handleSubmit}\n          initialValues={initialValues}\n          isLoading={isLoading}\n        />\n      </Container>\n    </MainContainer>\n  );\n};\n\nexport default CreateApplication;\n"],"names":["Form","onSubmit","initialValues","type","isLoading","onClose","useState","isSubmitClick","setIsSubmitClick","validationSchema","RequestSchema","values","resetForm","errors","touched","StyledFormContainer","UserData","options","isSubmitting","TypeHelp","selectedTypes","typeHelp","DetailsComment","Button","onClick","text","Yup","shape","contacts","name","min","max","required","tel","adress","delivery","info","of","additional","nameObjectTypeOfHelp","Title","styled","Container","Request","add","handleSubmit","result","data","notifyChange","error","notifyError","message","MainContainer"],"sourceRoot":""}