{"version":3,"file":"static/js/5809.0096bf11.chunk.js","mappings":"+QAYaA,EAAO,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,SAAUC,EAAsD,EAAtDA,cAAeC,EAAuC,EAAvCA,KAAuC,IAAjCC,UAAAA,OAAiC,SAAdC,EAAc,EAAdA,QACvE,GAA0CC,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAEA,OACE,SAAC,KAAD,CACEN,cAAeA,EACfO,iBAAkBC,EAAAA,cAClBT,SAAQ,mCAAE,WAAOU,EAAP,iFAAiBC,EAAjB,EAAiBA,UAAjB,SACFX,EAASU,GADP,OAEK,SAATR,GAAiBS,IACrBP,GAAWA,IAHH,2CAAF,wDAHV,SASG,YAAkC,IAA/BM,EAA8B,EAA9BA,OAAQE,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAClB,OACE,SAAC,EAAAC,oBAAD,CAAqBZ,KAAMA,EAA3B,UACE,iCACE,SAAC,EAAAa,SAAD,CAAUC,QAAS,CAAEJ,OAAAA,EAAQC,QAAAA,EAASI,aAAcd,MAEpD,SAAC,EAAAe,SAAD,CACEZ,cAAeA,EACfU,QAAS,CAAEJ,OAAAA,EAAQK,aAAcd,GACjCgB,cAAeT,EAAOU,YAExB,SAAC,EAAAC,eAAD,KAEA,SAAC,EAAAC,OAAD,CACEC,QAAS,kBAAMhB,GAAiB,IAChCiB,KACMrB,EAAkB,4DACT,SAATD,GAAoBC,EACX,SAATD,EAAwB,wDAA5B,EAD0C,mG,wFCxC/CO,EAAgBgB,EAAAA,KAAaC,MAAM,CAC9CC,SAAUF,EAAAA,KAAaC,MAAM,CAC3BE,KAAMH,EAAAA,KACHI,IAAI,EAAG,2IACPC,IAAI,GAAI,mHACRC,SAAS,wJAEZC,IAAKP,EAAAA,KACFI,IAAI,EAAG,2IACPC,IAAI,GAAI,mHACRC,SAAS,wJAEZE,OAAQR,EAAAA,KACLI,IAAI,EAAG,2IACPC,IAAI,GAAI,mHACRC,SAAS,0JAGdG,SAAUT,EAAAA,KACVU,KAAMV,EAAAA,KAENL,SAAUK,EAAAA,KAAYW,GAAGX,EAAAA,MAAcI,IAAI,EAAG,iGAE9CQ,WAAYZ,EAAAA,Q,8GCrBDa,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,KAAyBC,OAAM,SAAAC,GAAI,MAAK,CACxExC,KAAM,YADmBqC,CAAH,shB,0ICEXI,EAAY,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,YAAaC,EAA6C,EAA7CA,aAAczC,EAA+B,EAA/BA,QAASD,EAAsB,EAAtBA,UAAW2C,EAAW,EAAXA,KACzE,OACE,UAAC,EAAAC,OAAD,CAAQ3C,QAASA,EAAS4C,KAAMJ,EAAhC,UACGzC,IAAa,SAAC,EAAA8C,WAAD,KAEZ9C,IACA,UAAC,EAAA+C,UAAD,YACE,SAAC,EAAAC,UAAD,4EACA,SAAC,EAAAb,YAAD,CAAaf,QAASnB,KAEtB,SAAC,EAAAL,KAAD,CACEK,QAASA,EACTJ,SAAU6C,EACV5C,cAAe6C,EACf5C,KAAM,OACNC,UAAWA,Y,2KCjBVgD,GAAYZ,EAAAA,EAAAA,IAAOa,EAAAA,YAAPb,CAAH,mKAUTc,EAASd,EAAAA,GAAAA,IAAH,4EAMNW,EAAYX,EAAAA,GAAAA,IAAH,qD,wFClBTa,E,SAAcb,GAAAA,EAAH","sources":["module/Form/index.jsx","module/Form/service/Schema.js","module/Modal/component/CloseButton/CloseButton.jsx","module/Modal/component/EditModal/EditModal.jsx","module/Modal/component/EditModal/EditModal.styled.jsx","module/Modal/component/Title/Title.styled.jsx"],"sourcesContent":["import { Formik } from 'formik';\nimport { useState } from 'react';\nimport {\n  Button,\n  DetailsComment,\n  TypeHelp,\n  UserData,\n  StyledFormContainer,\n} from './component';\n\nimport { RequestSchema } from './service/Schema';\n\nexport const Form = ({ onSubmit, initialValues, type, isLoading = false, onClose }) => {\n  const [isSubmitClick, setIsSubmitClick] = useState(false);\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={RequestSchema}\n      onSubmit={async (values, { resetForm }) => {\n        await onSubmit(values);\n        if (type !== 'edit') resetForm();\n        onClose && onClose();\n      }}\n    >\n      {({ values, errors, touched }) => {\n        return (\n          <StyledFormContainer type={type}>\n            <>\n              <UserData options={{ errors, touched, isSubmitting: isLoading }} />\n\n              <TypeHelp\n                isSubmitClick={isSubmitClick}\n                options={{ errors, isSubmitting: isLoading }}\n                selectedTypes={values.typeHelp}\n              />\n              <DetailsComment />\n\n              <Button\n                onClick={() => setIsSubmitClick(true)}\n                text={(() => {\n                  if (isLoading) return 'Зачекайте...';\n                  if (type !== 'edit' && !isLoading) return 'Зарегеструвати';\n                  if (type === 'edit') return 'Зберегти';\n                })()}\n              />\n            </>\n          </StyledFormContainer>\n        );\n      }}\n    </Formik>\n  );\n};\n","import * as Yup from 'yup';\n\nexport const RequestSchema = Yup.object().shape({\n  contacts: Yup.object().shape({\n    name: Yup.string()\n      .min(2, '*Занадто коротке значення')\n      .max(20, '*Дуже багато символів')\n      .required(\"*Поле являється обов'язковим\"),\n\n    tel: Yup.string()\n      .min(4, '*Занадто коротке значення')\n      .max(20, '*Дуже багато символів')\n      .required(\"*Поле являється обов'язковим\"),\n\n    adress: Yup.string()\n      .min(2, '*Занадто коротке значення')\n      .max(30, '*Дуже багато символів')\n      .required(\"*Поле являється обов'язковим\"),\n  }),\n\n  delivery: Yup.boolean(),\n  info: Yup.string(),\n\n  typeHelp: Yup.array().of(Yup.string()).min(1, '*Оберіть значення!'),\n\n  additional: Yup.object(),\n});\n","import styled from 'styled-components';\n\nimport { IoIosCloseCircleOutline } from 'react-icons/io';\n\nexport const CloseButton = styled(IoIosCloseCircleOutline).attrs(prop => ({\n  type: 'button',\n}))`\n  color: #abbaf7;\n  position: absolute;\n  top: 9px;\n  right: 9px;\n  width: 30px;\n  height: 31px;\n  cursor: pointer;\n  border: none;\n  background-color: transparent;\n\n  &:hover {\n    color: #5e5e5e;\n  }\n\n  &:active {\n    background-color: #475094b8;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 45px;\n    height: 45px;\n    top: 2px;\n    right: 20px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    width: 34px;\n    height: 34px;\n    top: 5px;\n    right: 19px;\n  }\n`;\n","import { Form } from 'module/Form';\nimport { CloseButton } from 'module/Modal/component/CloseButton/CloseButton';\nimport { ModalW } from 'module/Modal/component/MainElementModal/Modal';\nimport { MainSpiner } from 'module/Utils/MainSpiner/MainSpiner';\nimport { Container, EditTitle } from './EditModal.styled';\n\nexport const EditModal = ({ modalIsOpen, handleSubmit, onClose, isLoading, data }) => {\n  return (\n    <ModalW onClose={onClose} open={modalIsOpen}>\n      {isLoading && <MainSpiner />}\n\n      {!isLoading && (\n        <Container>\n          <EditTitle>Редагувати</EditTitle>\n          <CloseButton onClick={onClose} />\n\n          <Form\n            onClose={onClose}\n            onSubmit={handleSubmit}\n            initialValues={data}\n            type={'edit'}\n            isLoading={isLoading}\n          />\n        </Container>\n      )}\n    </ModalW>\n  );\n};\n","import styled from 'styled-components';\n\nimport { StyledTitle } from '../Title/Title.styled';\n\nexport const EditTitle = styled(StyledTitle)`\n  font-size: 24px;\n  padding: 12px 30px;\n\n  @media screen and (min-width: 1024px) {\n    font-size: 22px;\n    padding: 8px 30px;\n  }\n`;\n\nexport const Spiner = styled.div`\n  position: absolute;\n  top: 5px;\n  right: 15px;\n`;\n\nexport const Container = styled.div`\n  background-color: white;\n`;\n","import styled from 'styled-components';\n\nexport const StyledTitle = styled.p`\n  font-size: 20px;\n  padding: 15px 25px;\n  color: white;\n  background-color: #5b7de1;\n\n  @media screen and (min-width: 768px) {\n    font-size: 26px;\n    padding: 25px 25px;\n  }\n`;\n"],"names":["Form","onSubmit","initialValues","type","isLoading","onClose","useState","isSubmitClick","setIsSubmitClick","validationSchema","RequestSchema","values","resetForm","errors","touched","StyledFormContainer","UserData","options","isSubmitting","TypeHelp","selectedTypes","typeHelp","DetailsComment","Button","onClick","text","Yup","shape","contacts","name","min","max","required","tel","adress","delivery","info","of","additional","CloseButton","styled","IoIosCloseCircleOutline","attrs","prop","EditModal","modalIsOpen","handleSubmit","data","ModalW","open","MainSpiner","Container","EditTitle","StyledTitle","Spiner"],"sourceRoot":""}